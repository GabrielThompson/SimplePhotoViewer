// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180821.2

#pragma once

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls {

struct MenuBar;
struct MenuBarItem;
struct NavigationViewItem;
struct PersonPicture;
struct RatingControl;
struct TreeViewItem;
struct TreeViewList;

}

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls::Primitives {

struct ColorPickerSlider;
struct ColorSpectrum;

}

WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Automation {

enum class ExpandCollapseState;

}

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Automation::Peers {

struct IColorPickerSliderAutomationPeer;
struct IColorPickerSliderAutomationPeerFactory;
struct IColorSpectrumAutomationPeer;
struct IColorSpectrumAutomationPeerFactory;
struct IMenuBarAutomationPeer;
struct IMenuBarAutomationPeerFactory;
struct IMenuBarItemAutomationPeer;
struct IMenuBarItemAutomationPeerFactory;
struct INavigationViewItemAutomationPeer;
struct INavigationViewItemAutomationPeerFactory;
struct IPersonPictureAutomationPeer;
struct IPersonPictureAutomationPeerFactory;
struct IRatingControlAutomationPeer;
struct IRatingControlAutomationPeerFactory;
struct ITreeViewItemAutomationPeer;
struct ITreeViewItemAutomationPeerFactory;
struct ITreeViewListAutomationPeer;
struct ITreeViewListAutomationPeerFactory;
struct ColorPickerSliderAutomationPeer;
struct ColorSpectrumAutomationPeer;
struct MenuBarAutomationPeer;
struct MenuBarItemAutomationPeer;
struct NavigationViewItemAutomationPeer;
struct PersonPictureAutomationPeer;
struct RatingControlAutomationPeer;
struct TreeViewItemAutomationPeer;
struct TreeViewListAutomationPeer;

}

namespace winrt::impl {

template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ using type = class_category; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer" }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ static constexpr guid value{ 0x793D35D4,0x4152,0x50FA,{ 0xB5,0xF4,0xF6,0xC0,0x45,0xC1,0x33,0x9D } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ static constexpr guid value{ 0xE5F9093F,0x5E2C,0x5148,{ 0xB5,0xD1,0x1C,0xDA,0x4E,0xB8,0x69,0x13 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ static constexpr guid value{ 0x005AC3D1,0xB031,0x58AB,{ 0x91,0x8D,0x03,0x0F,0xAB,0xAE,0xAF,0x87 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ static constexpr guid value{ 0xCFCCAE7E,0xFE0F,0x5C9C,{ 0x9D,0x1A,0x69,0xE2,0x0E,0x02,0x32,0xCF } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ static constexpr guid value{ 0xAE96E710,0xB9D3,0x59DD,{ 0x97,0x3E,0x1B,0xBC,0x86,0xCF,0x0A,0xFC } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ static constexpr guid value{ 0xD3E1CA3F,0x1702,0x5BD3,{ 0x8A,0xDB,0xE6,0xF6,0xCB,0x9E,0x75,0x31 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ static constexpr guid value{ 0x2DA890CD,0x0AAE,0x53B9,{ 0x8C,0x12,0x81,0x00,0x3F,0x60,0xED,0x14 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ static constexpr guid value{ 0x603B63C4,0xA626,0x50E6,{ 0x9C,0x1A,0x64,0x96,0x99,0xCA,0x7A,0xD6 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ static constexpr guid value{ 0xC7924C7A,0x739F,0x5251,{ 0x9B,0x86,0xDF,0x64,0x86,0xEB,0x08,0xA7 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ static constexpr guid value{ 0x890516D0,0x5A62,0x528B,{ 0x88,0x73,0x4F,0x71,0x40,0xB4,0x04,0x89 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ static constexpr guid value{ 0x2E71779B,0xACA4,0x52C2,{ 0x8A,0x25,0xBC,0x5F,0x1E,0xE3,0xB0,0xAE } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ static constexpr guid value{ 0xBD1709E5,0x1940,0x56FC,{ 0xB5,0xC3,0x85,0xE4,0x57,0x09,0x51,0xCC } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ static constexpr guid value{ 0x55493EC4,0x926B,0x595A,{ 0x97,0xA3,0xA7,0xFA,0x60,0x41,0x88,0xA4 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ static constexpr guid value{ 0xF87DACB6,0xE87E,0x59B3,{ 0x8A,0x40,0x33,0x1E,0xA7,0xAA,0x74,0x7D } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ static constexpr guid value{ 0x25B38166,0xB905,0x5480,{ 0x84,0x39,0xE4,0x59,0xA5,0xB7,0x7B,0x8C } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ static constexpr guid value{ 0x0C993C78,0x981F,0x5DCF,{ 0x93,0xD3,0xA2,0x17,0xAD,0x9A,0xCA,0xB6 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ static constexpr guid value{ 0x1EBF0F7F,0x6111,0x50A5,{ 0x83,0x98,0x89,0xC4,0xFD,0xD0,0xDE,0xDB } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ static constexpr guid value{ 0x51332D86,0xC414,0x5E7D,{ 0xB5,0x7B,0xE4,0x79,0x98,0x3C,0x9E,0x5D } }; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer; };

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::MenuBar const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::MenuBarItem const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::NavigationViewItem const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::PersonPicture const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::RatingControl const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::TreeViewItem const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::TreeViewList const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory<D>; };

}
