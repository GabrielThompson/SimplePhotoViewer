// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180821.2

#pragma once

#include "winrt/base.h"


static_assert(winrt::check_version(CPPWINRT_VERSION, "1.0.180821.2"), "Mismatched component and base headers.");
#include "winrt/Windows.Foundation.h"
#include "winrt/Windows.Foundation.Collections.h"
#include "winrt/impl/Windows.UI.Xaml.Interop.2.h"
#include "winrt/impl/Windows.UI.Xaml.Markup.2.h"
#include "winrt/impl/Microsoft.UI.Xaml.XamlTypeInfo.2.h"

namespace winrt::impl {

template <typename D> void consume_Microsoft_UI_Xaml_XamlTypeInfo_IXamlControlsXamlMetaDataProviderStatics<D>::Initialize() const
{
    check_hresult(WINRT_SHIM(Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProviderStatics)->Initialize());
}

template <typename D>
struct produce<D, Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProvider> : produce_base<D, Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProvider>
{};

template <typename D>
struct produce<D, Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProviderStatics> : produce_base<D, Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProviderStatics>
{
    int32_t WINRT_CALL Initialize() noexcept final
    {
        try
        {
            typename D::abi_guard guard(this->shim());
            WINRT_ASSERT_DECLARATION(Initialize, WINRT_WRAP(void));
            this->shim().Initialize();
            return 0;
        }
        catch (...) { return to_hresult(); }
    }
};

}

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::XamlTypeInfo {

inline XamlControlsXamlMetaDataProvider::XamlControlsXamlMetaDataProvider() :
    XamlControlsXamlMetaDataProvider(impl::call_factory<XamlControlsXamlMetaDataProvider>([](auto&& f) { return f.template ActivateInstance<XamlControlsXamlMetaDataProvider>(); }))
{}

inline void XamlControlsXamlMetaDataProvider::Initialize()
{
    impl::call_factory<XamlControlsXamlMetaDataProvider, Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProviderStatics>([&](auto&& f) { return f.Initialize(); });
}

}

WINRT_EXPORT namespace std {

template<> struct hash<winrt::Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProvider> : winrt::impl::hash_base<winrt::Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProvider> {};
template<> struct hash<winrt::Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProviderStatics> : winrt::impl::hash_base<winrt::Microsoft::UI::Xaml::XamlTypeInfo::IXamlControlsXamlMetaDataProviderStatics> {};
template<> struct hash<winrt::Microsoft::UI::Xaml::XamlTypeInfo::XamlControlsXamlMetaDataProvider> : winrt::impl::hash_base<winrt::Microsoft::UI::Xaml::XamlTypeInfo::XamlControlsXamlMetaDataProvider> {};

}
